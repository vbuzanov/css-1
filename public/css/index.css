/* Завдання 1. Зробіть , щоб HTML документ мав білий фон  , використовуйте Root селектор */
:root {
  background: white;
}
/* Завдання 2. Зробіть, щоб всі елементи на сторінці мали текст чорного кольору */
* {
  color: black;
}
/* Завдання 3. Зробіть, щоб h1 мав Синій колір фону */
h1 {
  color: blue;
}
/* Завдання 4. Зробіть, щоб клас green мав текст зеленого кольору */
.green {
  color: green;
}
/* Завдання 5. Зробіть, щоб елемент з індинтифікатором blue мав синій колір тексту */
#blue {
  color: blue;
}
/* Завдання 6. Зробіть, щоб тег p мав червоний фон ,а тег div мав зелений фон  
   Тут вам потрібно використовувати Селектор нащадка  */
.box div {
  background: green;
}
.box p {
  background: red;
}
/* Завдання 7. Задайте класу brown коричневий фон та білий колір тексту, використовуйте селектор класу */
.brown {
  background: brown;
  color: white;
}
/* Завдання 8. Зробіть червоний фон для дочірніх елементів тега ul 
   Використовуйте селектор для позначення дочірних елементів ( parent_tag > children_tag ) */
ul > li {
  background: red;
}

/* Завдання 9. Зробіть червоний фон для тегів, які є сестринськими відносно тега button з класом header-button
   Використовуйте Сестринські селектори відносно header-button */
.header-button + * {
  background: red;
}
/* Завдання 10. Зробіть синій фон для всіх cусідських тегів <p>, тегу який має клас 'susid' , а текст білим застосувавши сусідський селектор */
.susid ~ p {
  background: blue;
  color: white;
}
/* Завдання 11. Зробіть жовтий  фон  для класу .salo та індетифікатора #bread  */
#bread,
.salo {
  background: yellow;
}
/* Завдання №1: Для першого елементу списку зробіть колір тексту білим 
     Використовуйте Селектор першої дитини :first-child. */
.first-task li:first-child {
  color: white;
}

/* Завдання №2:  Змінити колір тексту першого елемента списку в першому блоці ul на жовтий 
    Використовуйте Селектор першої дитини :first-child. */

.second-task ul:first-child li:first-child {
  color: yellow;
}

/* Завдання №3:   Змінити фон першого елементу на жовтий в другому блоку ul 
   Використовуйте Селектор першої дитини :first-child.  */
.third-task ul:last-child li:first-child {
  background: yellow;
}
/* Завдання №4:  Змінити фон останнього елементу списку на жовтий. 
   Використовуйте Селектор останньої дитини :last-child. */
.four-task li:last-child {
  background: yellow;
}

/* Завдання №5: Змінити колір тексту останнього елемента списку в останньому блоці ul на білий 
   Використовуйте Селектор останньої дитини :last-child. */
.five-task ul:last-child li:last-child {
  color: white;
}

/* Завдання №6: Змінити колір тексту на червоний у блоках div, які єдині в своєму батьківському елементі section 
    Використовуйте Селектор одиничної дитини :only-child */
section div:only-child {
  color: red;
}

/* Завдання №7:  Застосуйте червоний фон до першого абзацу в div з классом seven-task 
    Використовуйте Селектор першого типу :first-of-type */
.seven-task p:first-of-type {
  background: red;
}

/* Завдання №8:  Застосуйте червоний фон до останнього абзацу в div з классом eight-task  
    Використовуйте Селектор останнього типу :last-of-type */
.eight-task p:last-of-type {
  background: red;
}

/* Завдання №9: Застосуйте жовтий фон для всіх <p> елементів, якщо в батьківському елементі більше не має <p>. 
    Використовуйте Селектор одиничного типу :only-of-type */
.nine-task p:only-of-type {
  background: yellow;
}

/* Завдання №1.  Зайдайте білий колір тексту всім посиланням які мають атрибут href
      Використовуйте селектор назви атрибута */
.lesson-three-task-one a[href] {
  color: white;
}

/* Завдання №2. Зайдайте жовтий колір тексту всім елементам списку які мають атрибут value
      Використовуйте селектор назви атрибута */
.lesson-three-task-two li[value] {
  color: yellow;
}

/* Завдання №3. Застосуйте селектор значення атрибута,
   щоб встановити червоний фон всім елементам списку які мають атрибут 
   value зі значенням '3' */
.lesson-three-task-three li[value='3'] {
  background: red;
}
/* Завдання №4. Застосуйте селектор наявності значення атрибута,
    щоб встановити синій фон для кнопки з класом "primary"  */
.lesson-three-task-four button[class~='primary'] {
  background: blue;
}

/* Завдання №5. Надайте червоний фон всім кнопка назви класу яких починаються зі слова secondary 
   Використовуйте селектор префіксу значення атрибута */
.lesson-three-task-five button[class|='secondary'] {
  background: red;
}

/* Завдання №6.  Застосуйте cелектор початку значення атрибута, щоб стилізувати тільки ті елементи списку,
   класи яких починаються на "b" та встановіть для них зелений колір тексту та білий фон. */
.lesson-three-task-six li[class^='b'] {
  color: green;
  background: white;
}

/* Завдання №7. Застосуйте селектор кореня значення атрибута, щоб стилізувати тільки ті елементи списку,
  в назві класів яких зустрічається 'on' та встановіть для них зелений колір тексту та білий фон. */
.lesson-three-task-seven li[class*='on'] {
  color: green;
  background: white;
}

/* Завдання №8. Напишіть CSS-код, який за допомогою конструкції селектор кінцівки значення атрибута виділить червоним фоном елементи ,
  які мають в кінці назви класу літеру "s". */

.lesson-three-task-eight ul > li {
  background: white;
}
.lesson-three-task-eight [class$='s'] {
  background: red;
}

/* Завдання №9. Зробіть першу букву заголовків червоним кольором.
   Використовуйте селектор псевдоелементу першої літери */
.lesson-three-task-nine h2 {
  color: black;
}

.lesson-three-task-nine h2::first-letter {
  color: red;
}

/* Завдання №10. Задайте першому рядку жовтий фон. 
   Використовуйте селектор псевдоелементу першого рядка */
.lesson-three-task-ten p::first-line {
  background: yellow;
}

/* Завдання №11. Задайте червоний фон плейсхолдера для інпут-поля. 
    Використовуйте цей селектор псевдоелемента плейсхолдера */
.lesson-three-task-eleven input::placeholder {
  background: red;
}
/* Завдання №12. Додайте "➤" перед кожним елементом списку;
  Використовуйте селектора псевдоелемента ”попереду” */

.lesson-three-task-twelve li::before {
  content: '➤ ';
}

/* Завдання №13. Додайте "➤" після кожного елемента списку;
  Використовуйте селектора псевдоелемента ”після” */
.lesson-three-task-thirteen li::after {
  content: ' ➤';
}
